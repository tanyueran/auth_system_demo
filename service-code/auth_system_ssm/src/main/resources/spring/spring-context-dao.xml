<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <!--1、扫描service层-->
    <context:component-scan base-package="com.github.tanyueran.auth_system_ssm.service"/>

    <!--2、引入配置文件-->
    <context:property-placeholder location="classpath:database.${spring.profiles.active}.properties"/>

    <!--3、配置sqlSessionFactory-->
    <bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sqlSessionFactoryBean">
        <!--数据库连接池-->
        <property name="dataSource" ref="dataSource"/>
        <!--mapper的配置-->
        <property name="configLocation" value="classpath:sqlMapperConfig.xml"/>
    </bean>

    <!--4、数据库连接池-->
    <bean class="com.alibaba.druid.pool.DruidDataSource" id="dataSource">
        <property name="username" value="${database.username}"/>
        <property name="password" value="${database.password}"/>
        <property name="url" value="${database.url}"/>
        <property name="driverClassName" value="${database.driver}"/>
    </bean>

    <!--5、配置事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--6、开启数据库事务-->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!--7、配置mapper扫描器-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--扫描的包路径-->
        <property name="basePackage" value="com.github.tanyueran.auth_system_ssm.mapper"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryBean"/>
    </bean>

    <!--配置redis-->
    <!--redis的基本信息配置，属性使用默认的-->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig"/>

    <!--连接工厂-->
    <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="hostName" value="${redis.url}"/>
        <property name="database" value="${redis.database}"/>
        <!--<property name="password" value="${redis.password}"/>-->
        <property name="port" value="${redis.port}"/>
        <property name="poolConfig" ref="jedisPoolConfig"/>
        <property name="usePool" value="true"/>
    </bean>

    <!--spring的redis的工具类-->
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="connectionFactory"/>
        <!--key的序列化器-->
        <property name="keySerializer">
            <bean class="com.alibaba.fastjson.support.spring.FastJsonRedisSerializer">
                <constructor-arg index="0" value="java.lang.Object"/>
            </bean>
        </property>
        <!--value的序列化器-->
        <property name="valueSerializer">
            <bean class="com.alibaba.fastjson.support.spring.FastJsonRedisSerializer">
                <constructor-arg index="0" value="java.lang.Object"/>
            </bean>
        </property>
    </bean>

    <!--引入spring security的配置文件-->
    <import resource="classpath:spring/spring-security.xml"/>
</beans>