<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.tanyueran.auth_system.mapper.UserMapper">
    <!--查询用户信息-->
    <resultMap id="userMap" type="UserPojo">
        <id column="id" property="id"/>
        <result column="user_name" property="userName"/>
        <result column="user_code" property="userCode"/>
        <result column="file_id" property="fileId"/>
        <result column="password" property="password"/>
        <result column="sex" property="sex"/>
        <result column="desc" property="desc"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <collection property="roles" column="id" ofType="RolePojo" select="getRoleByUserId"/>
    </resultMap>

    <!--查询角色-->
    <resultMap id="roleMap" type="RolePojo">
        <id column="id" property="id"/>
        <result column="role_name" property="roleName"/>
        <result column="role_code" property="roleCode"/>
        <result column="remark" property="remark"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <collection property="menus" column="id" ofType="MenuPojo" select="getMenuByRoleId"/>
    </resultMap>

    <!--查询菜单-->
    <resultMap id="menuMap" type="MenuPojo">
        <id column="id" property="id"/>
        <result column="pid" property="pid"/>
        <result column="menu_name" property="menuName"/>
        <result column="menu_code" property="menuCode"/>
        <result column="menu_type" property="menuType"/>
        <result column="remark" property="remark"/>
        <result column="data" property="data"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <collection property="buttons" column="id" ofType="Button" select="getButtonByMenuId"/>
    </resultMap>

    <!--查询用户信息-->
    <select id="getUserInfoByUserCode" resultMap="userMap">
        SELECT
            id,user_name,file_id,user_code,password,sex,`desc`,create_time,update_time
        FROM
            `user_table`
        WHERE
            user_code = #{userCode}
    </select>

    <select id="getUserInfoById" resultType="User">
        SELECT
            id,user_name,file_id,user_code,password,sex,`desc`,create_time,update_time
        FROM
            `user_table`
        WHERE
            id = #{userId}
    </select>

    <select id="getUserInfoByCode" resultType="User">
        SELECT
            id,user_name,file_id,user_code,password,sex,`desc`,create_time,update_time
        FROM
            `user_table`
        WHERE
            user_code = #{userCode}
    </select>


    <!--查询用户的角色-->
    <select id="getRoleByUserId" resultMap="roleMap" parameterType="String">
      SELECT
            r.id,r.role_name,r.role_code,r.remark,r.create_time,r.update_time
        FROM
            `user_role_table` ur
            LEFT JOIN `role_table` r ON ur.role_id = r.id
        WHERE
            ur.user_id = #{userId}
    </select>

    <!--查询角色的菜单权限-->
    <select id="getMenuByRoleId" resultMap="menuMap" parameterType="String">
        SELECT
            a.id,a.pid,a.menu_name,a.menu_code,a.menu_type,a.remark,a.data,a.create_time,a.update_time
        FROM
            `role_menu_table` rm
            LEFT JOIN `menu_table` a ON rm.menu_id = a.id
        WHERE
            rm.role_id = #{roleId}
    </select>

    <!--查询菜单的按钮权限-->
    <select id="getButtonByMenuId" resultType="Button" parameterType="String">
        SELECT
            b.id,b.button_name,b.button_code,b.remark,b.create_time,b.update_time
        FROM
            `menu_button_table` mb
            LEFT JOIN `button_table` b ON mb.button_id = b.id
        WHERE
            mb.menu_id = #{menuId}
    </select>

    <!--新增用户-->
    <insert id="addUser" parameterType="User">
      INSERT INTO `user_table` ( id, user_name, `password`, user_code, sex, `desc` )
        VALUES
            (#{id}, #{userName}, #{password}, #{userCode},#{sex},#{desc})
    </insert>

    <!--根据关键词分页查询用户-->
    <select id="queryUserDataByPage" parameterType="Page" resultType="User">
        SELECT
        *
        FROM
        `user_table`
        <if test="keyword != '' and keyword != null">
            WHERE
            user_name LIKE CONCAT('%',#{keyword},'%')
            OR user_code LIKE CONCAT('%',#{keyword},'%')
        </if>
        ORDER BY
        create_time DESC
        LIMIT ${size*(current-1)},#{size}
    </select>

    <!--获取关键字查询的用户总数-->
    <select id="getUserSizeByKeyword" parameterType="String" resultType="Integer">
        SELECT
        COUNT(*)
        FROM
        `user_table`
        <if test="keyword != '' and keyword != null">
            WHERE
            user_name LIKE CONCAT('%',#{keyword},'%')
            OR user_code LIKE CONCAT('%',#{keyword},'%')
        </if>
    </select>

    <!--更新用户信息-->
    <update id="updateUserByUserId" parameterType="User">
        UPDATE `user_table`
        <trim prefix="set" suffixOverrides=",">
            <if test="userName != null">
                user_name = #{userName},
            </if>
            <if test="userCode != null">
                user_code = #{userCode},
            </if>
            <if test="sex != null">
                sex = #{sex},
            </if>
            <if test="desc != null">
                `desc`=#{desc},
            </if>
        </trim>
        WHERE Id = #{id}
    </update>

    <!--删除用户和角色的中间表-->
    <delete id="deleteUserRoleByUserId" parameterType="String">
        DELETE FROM `user_role_table` WHERE user_id = #{userId}
    </delete>

    <!--根据用户id删除-->
    <delete id="deleteUserById" parameterType="String">
        DELETE FROM `user_table` WHERE id = #{userId}
    </delete>

    <!--获取用户的角色-->
    <select id="getRolesByUserId" parameterType="String" resultType="Role">
        SELECT
            r.id,
            r.role_code,
            r.role_name,
            r.create_time,
            r.update_time,
            r.remark
        FROM
            `user_role_table` ur
            LEFT JOIN `role_table` r ON r.id = ur.role_id
        WHERE
            user_id =  #{id}
    </select>

    <!--删除用户的角色-->
    <delete id="deleteRoleByUserId" parameterType="String">
      DELETE FROM `user_role_table` WHERE user_id = #{userId}
    </delete>

    <!--添加用户的角色-->
    <insert id="addRole" parameterType="List">
        INSERT INTO `user_role_table`(id,user_id,role_id)
        VALUES
        <foreach collection="list" item="item" separator="," index="index">
            (#{item.id},#{item.userId},#{item.roleId})
        </foreach>
    </insert>

</mapper>